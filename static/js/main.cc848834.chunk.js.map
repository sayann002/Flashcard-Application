{"version":3,"sources":["Flashcard.js","FlashcardList.js","App.js","index.js"],"names":["Flashcard","flashcard","useState","flip","setFlip","height","setHeight","frontEl","useRef","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","answer","question","options","window","addEventListener","removeEventListener","className","style","onClick","ref","map","option","FlashcardList","flashcards","id","App","setFlashcards","categories","setCategories","categoryEl","amountEl","decodeString","str","textArea","document","createElement","innerHTML","value","axios","get","then","response","data","trivia_categories","onSubmit","e","preventDefault","params","category","amount","results","questionItem","index","correct_answer","incorrect_answers","Date","now","sort","random","htmlFor","name","type","min","step","defaultValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cc848834.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction Flashcard({ flashcard }) {\r\n  const [flip, setFlip] = useState(false);\r\n  const [height, setHeight] = useState(\"initial\");\r\n\r\n  const frontEl = useRef();\r\n  const backEl = useRef();\r\n\r\n  function setMaxHeight() {\r\n    const frontHeight = frontEl.current.getBoundingClientRect().height;\r\n    const backHeight = backEl.current.getBoundingClientRect().height;\r\n    setHeight(Math.max(frontHeight, backHeight, 100));\r\n  }\r\n\r\n  useEffect(setMaxHeight, [\r\n    flashcard.answer,\r\n    flashcard.question,\r\n    flashcard.options,\r\n  ]);\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", setMaxHeight);\r\n    return () => window.removeEventListener(\"resize\", setMaxHeight);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={`card ${flip ? \"flip\" : \"\"}`}\r\n      style={{ height: height }}\r\n      onClick={() => setFlip(!flip)}\r\n    >\r\n      <div className=\"front\" ref={frontEl}>\r\n        {flashcard.question}\r\n        <div className=\"flashcard-options\">\r\n          {flashcard.options.map((option) => {\r\n            return (\r\n              <div className=\"flashcard-option\" key={option}>\r\n                {option}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"back\" ref={backEl}>\r\n        {flashcard.answer}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Flashcard;\r\n","import React from \"react\";\r\nimport Flashcard from \"./Flashcard\";\r\n\r\nfunction FlashcardList({ flashcards }) {\r\n  return (\r\n    <div className=\"card-grid\">\r\n      {flashcards.map((flashcard) => {\r\n        return <Flashcard flashcard={flashcard} key={flashcard.id} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FlashcardList;\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport FlashcardList from \"./FlashcardList\";\nimport \"./app.css\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState([]);\n  const [categories, setCategories] = useState([]);\n\n  const categoryEl = useRef();\n  const amountEl = useRef();\n\n  useEffect(() => {\n    axios\n      .get(\"https://opentdb.com/api_category.php\")\n      .then((response) => setCategories(response.data.trivia_categories));\n  }, []);\n  /* \n  useEffect(() => {\n    fetch(\"https://opentdb.com/api_category.php\")\n      .then((response) => response.json())\n      .then((data) => console.log(data));\n  });\n  */\n  /*\n  useEffect(() => {}, []);\n*/\n  function decodeString(str) {\n    const textArea = document.createElement(\"textarea\");\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios\n      .get(\"https://opentdb.com/api.php\", {\n        params: {\n          category: categoryEl.current.value,\n          amount: amountEl.current.value,\n        },\n      })\n      .then((response) => {\n        setFlashcards(\n          response.data.results.map((questionItem, index) => {\n            const answer = decodeString(questionItem.correct_answer);\n            const options = [\n              ...questionItem.incorrect_answers.map((answer) =>\n                decodeString(answer)\n              ),\n              answer,\n            ];\n            return {\n              id: `${index}-${Date.now()}`,\n              question: decodeString(questionItem.question),\n              answer: answer,\n              options: options.sort(() => Math.random() - 0.5),\n            };\n          })\n        );\n      });\n  }\n  return (\n    <>\n      <form className=\"header\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"category\">Category</label>\n          <select id=\"category\" ref={categoryEl}>\n            {categories.map((category) => {\n              return (\n                <option value={category.id} key={category.id}>\n                  {category.name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">Number Of Questions</label>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            min=\"1\"\n            step=\"1\"\n            defaultValue={10}\n            ref={amountEl}\n          />\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn\">Generate</button>\n        </div>\n      </form>\n      <div className=\"container\">\n        <FlashcardList flashcards={flashcards} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}